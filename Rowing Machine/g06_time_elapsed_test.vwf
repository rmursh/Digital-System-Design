/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 65536.0;
	SIMULATION_TIME = 65536.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("min_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("seconds")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("seconds[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("seconds[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("seconds[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("seconds[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("seconds[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("seconds[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seconds";
}

SIGNAL("minutes[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("minutes[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TPULSE_O")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("minutes")
{
	MEMBERS = "minutes[0]", "minutes[1]", "minutes[2]", "minutes[3]", "minutes[4]", "minutes[5]", "minutes[6]";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3276;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6.0;
	}
}

TRANSITION_LIST("enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 65536.0;
	}
}

TRANSITION_LIST("min_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7110.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 7180.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 806.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65536.0;
	}
}

TRANSITION_LIST("seconds[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3730.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 3380.0;
			LEVEL 0 FOR 3820.0;
		}
		LEVEL 1 FOR 3380.0;
		LEVEL 0 FOR 826.0;
	}
}

TRANSITION_LIST("seconds[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1810.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
			LEVEL 1 FOR 1460.0;
			LEVEL 0 FOR 1900.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 1460.0;
		LEVEL 0 FOR 826.0;
	}
}

TRANSITION_LIST("seconds[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 850.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 960.0;
				LEVEL 0 FOR 960.0;
			}
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 940.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 826.0;
	}
}

TRANSITION_LIST("seconds[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 370.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 480.0;
				LEVEL 0 FOR 480.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 460.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 366.0;
	}
}

TRANSITION_LIST("seconds[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 136;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 126.0;
	}
}

TRANSITION_LIST("seconds[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 273;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 6.0;
	}
}

TRANSITION_LIST("minutes[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7130.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 7200.0;
			LEVEL 0 FOR 7200.0;
		}
		LEVEL 1 FOR 806.0;
	}
}

TRANSITION_LIST("minutes[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14330.0;
		LEVEL 1 FOR 14400.0;
		LEVEL 0 FOR 14400.0;
		LEVEL 1 FOR 14400.0;
		LEVEL 0 FOR 8006.0;
	}
}

TRANSITION_LIST("minutes[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 28730.0;
		LEVEL 1 FOR 28800.0;
		LEVEL 0 FOR 8006.0;
	}
}

TRANSITION_LIST("minutes[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57530.0;
		LEVEL 1 FOR 8006.0;
	}
}

TRANSITION_LIST("minutes[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65536.0;
	}
}

TRANSITION_LIST("minutes[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65536.0;
	}
}

TRANSITION_LIST("minutes[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65536.0;
	}
}

TRANSITION_LIST("TPULSE_O")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 546;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 6.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "min_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "seconds";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "seconds[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "minutes";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "minutes[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "TPULSE_O";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 21575;
	MASTER = TRUE;
}
;
